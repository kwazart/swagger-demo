/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.ErrorData;
import org.openapitools.model.MobileBanker;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-11-02T19:55:19.584688500+03:00[Europe/Moscow]")
@Validated
@Tag(name = "Mobile banker", description = "the mobile-banker API")
@RequestMapping("${openapi.open.base-path:/api/v1}")
public interface MobileBankerApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * PUT /mobile-banker/{employeeId}/deleting-device-id : Метод удаления device-id мобильного банкира
     *
     * @param employeeId ID сотрудника (required)
     * @return Успешное выполнение (status code 200)
     *         or Ошибка (status code 400)
     */
    @Operation(
        operationId = "deleteDeviceId",
        summary = "Метод удаления device-id мобильного банкира",
        tags = { "Mobile banker" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Успешное выполнение"),
            @ApiResponse(responseCode = "400", description = "Ошибка", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorData.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/mobile-banker/{employeeId}/deleting-device-id",
        produces = { "application/json" }
    )
    default ResponseEntity<Void> deleteDeviceId(
        @Parameter(name = "employeeId", description = "ID сотрудника", required = true) @PathVariable("employeeId") String employeeId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /mobile-banker : Метод получения мобильного банкира
     *
     * @return Успешное получение - Профиль МБ (status code 200)
     *         or Ошибка (status code 400)
     */
    @Operation(
        operationId = "getMobileBanker",
        summary = "Метод получения мобильного банкира",
        tags = { "Mobile banker" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Успешное получение - Профиль МБ", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MobileBanker.class))
            }),
            @ApiResponse(responseCode = "400", description = "Ошибка", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorData.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/mobile-banker",
        produces = { "application/json" }
    )
    default ResponseEntity<MobileBanker> getMobileBanker(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"employeeFullName\" : \"Иванов Иван Иванович\", \"phone\" : \"74956735665\", \"city\" : \"Москва\", \"photo\" : \"photo\", \"position\" : \"Менеджер\", \"supervisorFullName\" : \"Cидоров Василий Иванович\", \"email\" : \"example@mail.com\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
